@using DocumentApp.Data
@inject NavigationManager nManager
@inject DocumentApp.Services.MongoDBConnection mongoConnection
@inject IJSRuntime JS

<EditForm Model="@currentProjecter" OnValidSubmit="@(() => SaveChanges())">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="row g-3">
        <div class="col-md-4">
            <label>Организация:</label> <input placeholder="Organisation" class="form-control" @bind-value="@currentProjecter.ProjectOrganisation"></input>
        </div>

        <div class="col-md-4">
            <label>ОГРН:</label> <input placeholder="ОГРН" class="form-control" @bind-value="@currentProjecter.OGRN"></input>
        </div>

        <div class="col-md-4">
            <label>ИНН:</label> <input placeholder="ИНН" class="form-control" @bind-value="@currentProjecter.INN"></input>
        </div>

        <div class="col-md-4">
            <label>КПП:</label> <input placeholder="КПП" class="form-control" @bind-value="@currentProjecter.KPP"></input>
        </div>

        <div class="col-md-4">
            <label>Адрес:</label> <input placeholder="Адрес" class="form-control" @bind-value="@currentProjecter.Adress"></input>
        </div>

        <div class="col-md-4">
            <label>Директор:</label> <input placeholder="Директор" class="form-control" @bind-value="@currentProjecter.Director"></input>
        </div>

        <div class="col-md-4">
            <label>Главный инженер:</label> <input placeholder="Глав.инженер" class="form-control" @bind-value="@currentProjecter.MainEngineer"></input>
        </div>

        <UserComponent @ref="uc" currentUser="currentProjecter"></UserComponent>

        <div class="col-12">
             <button class="btn btn-primary mb-3" type="submit">Сохранить данные</button>
        </div>

    </div>
</EditForm>

@code {
    [Parameter]
    public Projecter currentProjecter { get; set; }

    UserComponent uc;

    private void SaveChanges()
    {
        if (uc.checkPassword != uc.currentUser.Password)
        {
            JS.InvokeVoidAsync("alert", "Passwords are not the same!");
            return;
        }

        mongoConnection.UpdateDeveloper(currentProjecter);
        nManager.NavigateTo("/personalCardPage", true);
    }
}