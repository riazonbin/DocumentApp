@inject DocumentApp.Defaults.DefaultDocument defDoc
@using DocumentApp.Data
@using DocumentApp.Services
@using Microsoft.AspNetCore.Mvc
@inject FileSystemService fileSysServ
@inject DocumentApp.Services.MongoDBConnection mongoConnection
@inject ProjectService projectService
@inject IJSRuntime JS
@inject UserService userService
@inject NavigationManager nManager


<table class="table">
    <thead>
        <tr>
            <th>Doc name</th>
            <th>File name</th>
            <th>Requirement</th>
            <th>Approvement</th>
            <th>Download</th>
            <th>Upload</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var doc in fileSysServ.currentProject.Documents)
    {
        <tr>
            <td>@doc.Name</td>
            <td>@doc.FileName</td>
            <td><input type="checkbox" disabled @bind="doc.IsRequired" /></td>
            <td><input type="checkbox" disabled @bind="doc.IsApproved" /></td>
            <td><button class="btn btn-primary mb-3" @onclick="(() => Download(doc))">Download</button></td>
            <td><InputFile class="btn btn-primary mb-3" OnChange="((e) => LoadFiles(e, doc))">Upload</InputFile></td>
        </tr>
    }
    </tbody>
</table>
<button @onclick="CloseComp" class="btn btn-primary mb-3">Save changes</button>

@code 
{

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
    private void Check(Document doc)
    {

    }

    private byte[] GetByteArray(string file)
    {
        return fileSysServ.GetByteArrayFromFile(file);
    }

    private async Task LoadFiles(InputFileChangeEventArgs e, Document doc)
    {

        foreach (var file in e.GetMultipleFiles(e.FileCount))
        {
            Stream stream = file.OpenReadStream(2000000);
            await fileSysServ.UploadDocumentToDb(stream, file.Name);
            stream.Dispose();

            doc.FileName = file.Name;
            doc.data = GetByteArray(file.Name);
        }
    }

    public void Download(Document doc)
    {
        try
        {
            fileSysServ.DownloadDocumentToProject(doc);
        }
        catch { }
    }

    public void CloseComp()
    {
        projectService.UpdateProjectInDataBase(fileSysServ.currentProject);
        nManager.NavigateTo("/projectsPage");
    }
}
