@using DocumentApp.Data
@inject NavigationManager nManager
@inject DocumentApp.Services.MongoDBConnection mongoConnection
@inject IJSRuntime JS

<EditForm Model="@currentDeveloper" OnValidSubmit="@(() => SaveChanges())">
 <DataAnnotationsValidator></DataAnnotationsValidator>
 <ValidationSummary></ValidationSummary>
    <div class="row g-3">
    <div class="col-md-4">
        <label>Организация:</label> <input placeholder="Organisation" class="form-control" @bind-value="@currentDeveloper.DeveloperOrganisation"></input>
    </div>

    <div class="col-md-4">
        <label>ОГРН:</label> <input placeholder="ОГРН" class="form-control" @bind-value="@currentDeveloper.OGRN"></input>
    </div>

    <div class="col-md-4">
        <label>ИНН:</label> <input placeholder="ИНН" class="form-control" @bind-value="@currentDeveloper.INN" ></input>
    </div>

    <div class="col-md-4">
        <label>КПП:</label> <input placeholder="КПП" class="form-control" @bind-value="@currentDeveloper.KPP"></input>
    </div>

    <div class="col-md-4">
        <label>Адрес:</label> <input placeholder="Адрес" class="form-control" @bind-value="@currentDeveloper.Adress"></input>
    </div>

    <div class="col-md-4">
        <label>Глава исполкома:</label> <input placeholder="Глава исполкома" class="form-control" @bind-value="@currentDeveloper.Chief"></input>
    </div>

    <UserComponent @ref="uc" currentUser="currentDeveloper"></UserComponent>

    <div class="col-12">
         <button class="btn btn-primary mb-3" type="submit">Сохранить данные</button>
    </div>
</div>
</EditForm>


@code {
    [Parameter]
    public Developer currentDeveloper { get; set; }

    UserComponent uc;

    private void SaveChanges()
    {
        if (uc.checkPassword != uc.currentUser.Password)
        {
            JS.InvokeVoidAsync("alert", "Passwords are not the same!");
            return;
        }

        mongoConnection.UpdateDeveloper(currentDeveloper);
        nManager.NavigateTo("/personalCardPage", true);
    }
}
