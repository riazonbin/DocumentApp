@inject DocumentApp.Services.UserService userService
@inject DocumentApp.Services.MongoDBConnection mongoConnection
@inject DocumentApp.Defaults.DefaultDocument defDoc
@inject DocumentApp.Services.FileSystemService fileSysServ
@inject DocumentApp.Services.ProjectService projService
@using DocumentApp.Data

@page "/projectPage"


<h3>ProjectPage</h3>

@if(userService.currentUser.Role == Enums.RolesEnum.Customer)
{
    customer =  mongoConnection.FindCustomerByLogin(userService.currentUser.Login);

    if()
    <CustomerNewProject department="@customer.Department"></CustomerNewProject>

}

@if (userService.currentUser.Role == Enums.RolesEnum.Developer)
{
    developer = mongoConnection.FindDeveloperByLogin(userService.currentUser.Login);

    <CustomerNewProject department="@customer.Department"></CustomerNewProject>

}

@if (userService.currentUser.Role == Enums.RolesEnum.Projecter)
{
    projecter = mongoConnection.FindProjecterByLogin(userService.currentUser.Login);

    <CustomerNewProject department="@customer.Department"></CustomerNewProject>
}

@code {
    [Parameter]
    public bool IsNew { get; set; }

    Customer customer;
    Projecter projecter;
    Developer developer;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        fileSysServ.currentProject = new Project();
    }
}
