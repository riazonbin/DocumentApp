@page "/regPage"
@using DocumentApp.Data
@inject DocumentApp.Services.MongoDBConnection mongoConnection
@inject IJSRuntime JS

<h1>Registration form</h1>
<form class="needs-validation" novalidate>
    <div class="form-row">
        <label>Логин:</label> <input placeholder="Login" class="form-control" @bind-value="@login" required></input>
    <div class="valid-feedback">
        Looks good!
    </div>
        <br /><br />
        <label>Пароль:</label> <input placeholder="Password" @bind-value="@password" required></input>
        <br /><br />
        <label>Повторите пароль:</label> <input placeholder="Repeat password" input @bind-value="@checkPassword" required></input>
        <br /><br />
        <label>Email:</label> <input placeholder="Email" @bind-value="@email" required></input>
        <br /><br />
        <label>Имя:</label> <input placeholder="Login" @bind-value="@name" required></input>
        <br /><br />
        <label>Роль</label> 
        <select id="roleSelector" @bind="@role">
            <option value="Заказчик">Заказчик</option>
            <option value="Застройщик">Застройщик</option>
            <option value="Проектировщик">Проектировщик</option>
        </select>
        <br /><br />
        @if(role == "Заказчик")
        {
            <CustomerComponent></CustomerComponent>
        }
        @if(role == "Застройщик")
        {
            <DeveloperComponent></DeveloperComponent>
        }
        @if(role == "Проектировщик")
        {
            <ProjecterComponent></ProjecterComponent>
        }
        <br /><br />
        <button class="btn btn-primary mb-3" type="submit" @onclick="() => StateHasChanged() ">Sign Up</button>
    </div>
</form>

    @code {
    string name = "";
    string login = "";
    string password = "";
    string email = "";

    string checkPassword = "";
    string role = "";

    User user = new User();

    private async void AddToDb()
    {
        if (String.IsNullOrEmpty(user.Email) || String.IsNullOrEmpty(user.FirstName) || String.IsNullOrEmpty(user.LastName)
    || String.IsNullOrEmpty(user.Login) || String.IsNullOrEmpty(user.Password) || checkPassword == "")
        {
            await JS.InvokeVoidAsync("alert", "Not all fields are written!");
            return;
        }

        if (checkPassword != user.Password)
        {
            await JS.InvokeVoidAsync("alert", "Passwords are not the same!");
            return;
        }
        if (mongoConnection.FindByLogin(user.Login) is not null)
        {
            await JS.InvokeVoidAsync("alert", "Such login already exists!");
            return;
        }

        mongoConnection.AddToDataBase(user);
        StateHasChanged();
    }
}